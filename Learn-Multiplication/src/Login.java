import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOError;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;



/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author harun
 */
public final class Login extends javax.swing.JFrame {
    
    
    private ArrayList<User> users = new ArrayList<User>();
    public ArrayList<User> getUsers() {
        return users;
    }


    public void saveUserstoFile(String fileName){
        try{
            FileOutputStream fos = new FileOutputStream(fileName);
            ObjectOutputStream oos = new ObjectOutputStream(fos);
            oos.writeObject(users);
            oos.close();
            fos.close();
            JOptionPane.showMessageDialog(this, "Kullanıcılar Kaydedildi.");
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, "Kullanıcılar kaydedilemedi.");
            e.printStackTrace();
        }
    }
    //load users to arraylist
    public void loadUsersFromFile(String fileName){
        try{
            File file = new File(fileName);
            if (!file.exists()) {
                System.out.println("File does not exist. Creating new file: " + fileName);
                file.createNewFile();
                users.clear(); // Clear the existing list
            } 
            else{
                FileInputStream fis = new FileInputStream(fileName);
                ObjectInputStream ois = new ObjectInputStream(fis);
                users.clear();
                users.addAll((ArrayList<User>) ois.readObject());
                ois.close();
                fis.close();
                JOptionPane.showMessageDialog(this, "Kullanıcılar Açıldı.");
            }
        }
        catch(IOException | ClassNotFoundException e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Kullanıcılar Açılamadı.");
        }

    }
    /**
     * Creates new form Login
     */
    public Login() {
        this.setTitle("Çarpım Tablosu");
        ImageIcon icon = new ImageIcon("carpp.png");
        this.setIconImage(icon.getImage());
        initComponents();

        //users.add(new User("harun", "1234"));
        this.loadUsersFromFile("users.dat");
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        loginTitle = new javax.swing.JLabel();
        IDtaker = new javax.swing.JTextField();
        girisButton = new javax.swing.JButton();
        loginRegisterSender = new javax.swing.JLabel();
        PasswordTaker = new javax.swing.JTextField();
        ebeveynGiris = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        loginTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        loginTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        loginTitle.setText("ÇARPIM TABLOSU ALIŞTIRMA");

        IDtaker.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        IDtaker.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        IDtaker.setText("Kullanıcı Adı");
        IDtaker.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                IDtakerMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                IDtakerMouseExited(evt);
            }
        });
        IDtaker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDtakerActionPerformed(evt);
            }
        });
        IDtaker.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                IDtakerKeyPressed(evt);
            }
        });

        girisButton.setFont(new java.awt.Font("Calibri", 1, 15)); // NOI18N
        girisButton.setText("GİRİŞ");
        girisButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        girisButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                girisButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                girisButtonMouseEntered(evt);
            }
        });
        girisButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                girisButtonActionPerformed(evt);
            }
        });

        loginRegisterSender.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        loginRegisterSender.setForeground(new java.awt.Color(0, 0, 153));
        loginRegisterSender.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        loginRegisterSender.setText("Kayıt Olmak İçin Tıklayınız.");
        loginRegisterSender.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loginRegisterSenderMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                loginRegisterSenderMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                loginRegisterSenderMouseExited(evt);
            }
        });

        PasswordTaker.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        PasswordTaker.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        PasswordTaker.setText("Parola");
        PasswordTaker.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                PasswordTakerMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                PasswordTakerMouseExited(evt);
            }
        });
        PasswordTaker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PasswordTakerActionPerformed(evt);
            }
        });
        PasswordTaker.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                PasswordTakerKeyPressed(evt);
            }
        });

        ebeveynGiris.setFont(new java.awt.Font("Segoe UI", 1, 9)); // NOI18N
        ebeveynGiris.setText("Ebeveyn Giriş");
        ebeveynGiris.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ebeveynGirisMouseClicked(evt);
            }
        });
        ebeveynGiris.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ebeveynGirisActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(loginRegisterSender, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PasswordTaker, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(IDtaker, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(121, 121, 121))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(girisButton, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(165, 165, 165))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(ebeveynGiris, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(loginTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 418, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(loginTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(IDtaker, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(PasswordTaker, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addComponent(loginRegisterSender)
                .addGap(18, 18, 18)
                .addComponent(girisButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ebeveynGiris, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void IDtakerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDtakerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IDtakerActionPerformed

    private void loginRegisterSenderMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginRegisterSenderMouseEntered
        if(!loginRegisterSender.getForeground().equals(Color.red))
            loginRegisterSender.setForeground(Color.red);
        // TODO add your handling code here:
    }//GEN-LAST:event_loginRegisterSenderMouseEntered

    private void loginRegisterSenderMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginRegisterSenderMouseExited
        
        if(loginRegisterSender.getForeground().equals(Color.red))
            loginRegisterSender.setForeground(new java.awt.Color(0, 0, 153));
        // TODO add your handling code here:
    }//GEN-LAST:event_loginRegisterSenderMouseExited

    private void IDtakerMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IDtakerMouseEntered
        if(IDtaker.getText().equals("Kullanıcı Adı"))
            IDtaker.setText("");
        
    }//GEN-LAST:event_IDtakerMouseEntered

    private void IDtakerMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IDtakerMouseExited
        if(IDtaker.getText().equals(""))
            IDtaker.setText("Kullanıcı Adı");
    }//GEN-LAST:event_IDtakerMouseExited

    private void loginRegisterSenderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginRegisterSenderMouseClicked
        
        this.setVisible(false);
        Registration openReg = new Registration(this, users);
        openReg.setVisible(true);
                        
        // TODO add your handling code here:
    }//GEN-LAST:event_loginRegisterSenderMouseClicked

    private void PasswordTakerMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PasswordTakerMouseEntered
        if(PasswordTaker.getText().equals("Parola"))
        PasswordTaker.setText("");
    }//GEN-LAST:event_PasswordTakerMouseEntered

    private void PasswordTakerMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PasswordTakerMouseExited
        if(PasswordTaker.getText().equals(""))
        PasswordTaker.setText("Parola");
    }//GEN-LAST:event_PasswordTakerMouseExited

    private void PasswordTakerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PasswordTakerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PasswordTakerActionPerformed

    private void girisButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_girisButtonMouseClicked
        if(IDtaker.getText().equals("Kullanıcı Adı") || PasswordTaker.getText().equals("Parola"))
        {
            JOptionPane.showMessageDialog(null, "Lütfen kullanıcı adı ve parola giriniz.");
        }
        else
        {
            String ID = IDtaker.getText();
            String Password = PasswordTaker.getText();
            boolean login = false;
            int i;
            for( i = 0; i < users.size(); i++)
            {
                if(users.get(i).getUserID().equals(ID) && users.get(i).getPassword().equals(Password))
                {
                    login = true;
                    break;
                }
            }
            if(login)
            {
                JOptionPane.showMessageDialog(null, "Giriş başarılı.");
                this.setVisible(false);
                anaMenu anaMenu = new anaMenu(users.get(i));
                anaMenu.setVisible(true);
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Kullanıcı adı veya parola hatalı.");
            }
        }
                // TODO add your handling code here:
    }//GEN-LAST:event_girisButtonMouseClicked

    private void girisButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_girisButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_girisButtonActionPerformed

    private void ebeveynGirisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ebeveynGirisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ebeveynGirisActionPerformed

    private void girisButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_girisButtonMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_girisButtonMouseEntered

    private void ebeveynGirisMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ebeveynGirisMouseClicked
        if(IDtaker.getText().equals("Kullanıcı Adı") || PasswordTaker.getText().equals("Parola"))
        {
            JOptionPane.showMessageDialog(null, "Lütfen kullanıcı adı ve parola giriniz.");
        }
        else
        {
            int i;
            String ID = IDtaker.getText();
            String Password = PasswordTaker.getText();
            boolean login = false;
            for( i = 0; i < users.size(); i++)
            {
                if(users.get(i).getUserID().equals(ID) && users.get(i).getPassword().equals(Password))
                {
                    login = true;
                    break;
                }
            }
            if(login)
            {
                JOptionPane.showMessageDialog(null, "Giriş başarılı.");
                this.setVisible(false);
                Ebeveyn ebeveyn = new Ebeveyn(users.get(i), this);
                ebeveyn.setVisible(true);
//                anaMenu anaMenu = new anaMenu();
//                anaMenu.setVisible(true);
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Kullanıcı adı veya parola hatalı.");
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_ebeveynGirisMouseClicked

    private void IDtakerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_IDtakerKeyPressed
        //when enter pressed on IDtaker it will go to PasswordTaker
        //without keyEvent.VK_ENTER using this method will cause an error
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        PasswordTaker.setText("");
        PasswordTaker.requestFocus();
    }

// TODO add your handling code here:
    }//GEN-LAST:event_IDtakerKeyPressed

    private void PasswordTakerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PasswordTakerKeyPressed
        //when enter pressed on PasswordTaker it will mouse click on girisButton
        //without keyEvent.VK_ENTER using this method will cause an error
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        girisButtonMouseClicked(null);
    }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_PasswordTakerKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField IDtaker;
    private javax.swing.JTextField PasswordTaker;
    private javax.swing.JButton ebeveynGiris;
    private javax.swing.JButton girisButton;
    private javax.swing.JLabel loginRegisterSender;
    private javax.swing.JLabel loginTitle;
    // End of variables declaration//GEN-END:variables
}
